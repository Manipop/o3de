/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#pragma once

// This file provides exentions to Ibl.azsli that are specific to deferred render pipelines.
#include <Atom/Features/PBR/Lights/Ibl.azsli>

// These options have 'Forward' in the name, but we still use them for the deferred pass, since
// we would have to expose new options in the material otherwise
option bool o_meshUseForwardPassIBLSpecular = false;
option bool o_materialUseForwardPassIBLSpecular = false;

void ApplyIbl_DeferredPass(Surface surface, inout LightingData lightingData, int reflectionProbeCubeMapIndex, ReflectionProbeData reflectionProbeData)
{
#if FORCE_IBL_IN_FORWARD_PASS
    bool useDiffuseIbl = true;
    bool useSpecularIbl = true;
#else
    #if FORCE_OPAQUE
        bool isTransparent = false;
    #else
        bool isTransparent = (o_opacity_mode == OpacityMode::Blended || o_opacity_mode == OpacityMode::TintedTransparent);
    #endif
    bool useDiffuseIbl = isTransparent;
    bool useSpecularIbl = (isTransparent || o_meshUseForwardPassIBLSpecular || o_materialUseForwardPassIBLSpecular);
#endif

    TextureCube reflectionProbeCubeMap = Bindless::GetTextureCube(reflectionProbeCubeMapIndex);
    ApplyIBL(surface, lightingData, useDiffuseIbl, useSpecularIbl, reflectionProbeData, reflectionProbeCubeMap);
}
